// -*- coding: utf-8; mode: groovy -*-

buildscript {
	repositories {
		mavenCentral()
		maven { url "http://repo.spring.io/plugins-release" }
	}
	dependencies {
		classpath "com.diffplug.spotless:spotless-plugin-gradle:4.5.1"
		classpath "de.thetaphi:forbiddenapis:3.1"
		classpath "de.aaschmid:gradle-cpd-plugin:1.0"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
		classpath "jp.classmethod.aws:gradle-aws-plugin:0.41"
	}
}

plugins {
	id "com.jfrog.bintray" version "1.8.5"
}

// custom configuration
apply from: 'gradle/version.gradle'
apply from: 'gradle/resolveDependencies.gradle'
bintrayUpload.enabled = false

ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

defaultTasks "clean", "build"


allprojects {
	repositories {
		mavenCentral()
	}
	group = "jp.xet.${githubProjectName}"
	version = rootProject.version
}
description "Support library for Spring framework, AWS Java SDK and the others."

subprojects {
	apply plugin: "java"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "maven"
	apply plugin: "maven-publish"
	apply plugin: "com.jfrog.bintray"

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
		}
	}
	
	sourceCompatibility = targetCompatibility = 1.8
	
	// ======== code quality ========
	apply plugin: "checkstyle"
	apply plugin: "findbugs"
	apply plugin: "pmd"
	apply plugin: "cpd"
	apply plugin: "jacoco"
	apply plugin: "de.thetaphi.forbiddenapis"
	apply plugin: "com.diffplug.gradle.spotless"

	// code quality configuration
	apply from: "${rootProject.projectDir}/gradle/quality/checkstyle.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/findbugs.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/pmd.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/cpd.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/jacoco.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/forbiddenapis.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/spotless.gradle"
	
	apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
	apply from: "${rootProject.projectDir}/gradle/bintray.gradle"
	
	// compiler
	tasks.withType(AbstractCompile) each {
		it.options.encoding = "UTF-8"
	}
	compileJava {
		options.compilerArgs << "-Xlint"
	}
	
	configurations {
		deployerJars
		testCompile.extendsFrom compileOnly
	}

	repositories {
		mavenCentral()
		maven { url "http://maven.classmethod.info/snapshot" } // for baseunits
		maven { url "http://maven.classmethod.info/release" } // for baseunits
	}
	
	dependencies {
		compile "org.slf4j:slf4j-api"
		compileOnly "org.projectlombok:lombok:$lombokVersion"
		testCompile "org.slf4j:jul-to-slf4j"
		testCompile "org.slf4j:jcl-over-slf4j"
		testCompile "ch.qos.logback:logback-classic"
		testCompile "junit:junit:$junitVersion"
		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
		testCompile "org.mockito:mockito-core"
	}
	
	apply plugin: "jp.classmethod.aws"
	aws {
		profileName = null
	}
	
	// ======== Publishing =======
	publishing {
		repositories {
			maven {
				def releasesRepoUrl = "${System.getenv("PUBLISH_REPOSITORY")}/release"
				def snapshotsRepoUrl = "${System.getenv("PUBLISH_REPOSITORY")}/snapshot"
				url version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

				credentials(AwsCredentials) {
					def profileName = project.hasProperty("awsProfileForMetropolisRepo") ? project.awsProfileForMetropolisRepo : null
					def cred = aws.newCredentialsProvider(profileName).credentials
					accessKey cred.getAWSAccessKeyId()
					secretKey cred.getAWSSecretKey()
				}
			}
		}

		publications {
			mavenJava(MavenPublication) {
				from components.java
				artifact sourcesJar {
					classifier "sources"
				}
				artifact javadocJar {
					classifier "javadoc"
				}
				pom.withXml {
					asNode().children().last() + {
						resolveStrategy = Closure.DELEGATE_FIRST
						name project.name
						description project.description
						inceptionYear "2015"
						licenses {
							license {
								name "The Apache Software License, Version 2.0"
								url "http://www.apache.org/license/LICENSE-2.0.txt"
								distribution "repo"
							}
						}
					}
				}
			}
		}
	}
}

// ======== wrapper ========
wrapper {
	gradleVersion = 4.8
}
